<!--
 *
 * Nkf.Net.targets -
 *
 * WARNING: This MSBuild file requires MSBuild 4.0 features.
 *
 * Released to the public domain, use at your own risk!
 *
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
  ******************************************************************************
  **                    Native DLL                                            **
  ******************************************************************************
  -->
  <!-- Detect OS platform -->
  <PropertyGroup>
    <NkfNetPlatform Condition=" '$(NkfNetPlatform)' == '' And '$(RuntimeIdentifier.StartsWith(&quot;win&quot;))'=='True' ">win32</NkfNetPlatform>
    <NkfNetPlatform Condition=" '$(NkfNetPlatform)' == '' And '$(RuntimeIdentifier.StartsWith(&quot;osx&quot;))'=='True' ">mac64</NkfNetPlatform>
    <NkfNetPlatform Condition=" '$(NkfNetPlatform)' == '' And '$(RuntimeIdentifier.StartsWith(&quot;linux&quot;))'=='True' ">linux64</NkfNetPlatform>
    <NkfNetPlatform Condition=" '$(NkfNetPlatform)' == '' And '$(OS)' == 'Windows_NT' ">win-x64</NkfNetPlatform>
    <NkfNetPlatform Condition=" '$(NkfNetPlatform)' == '' And '$(OS)' == 'Unix' And Exists ('/Applications') ">mac64</NkfNetPlatform>
    <NkfNetPlatform Condition=" '$(NkfNetPlatform)' == '' And '$(OS)' == 'Unix' ">linux-x64</NkfNetPlatform>
  </PropertyGroup>
  
  <PropertyGroup>
    <NkfNetLibraryName Condition="'$(NkfNetLibraryName)' == '' And '$(NkfNetPlatform)' == 'win32'">nkf32.dll</NkfNetLibraryName>
    <NkfNetLibraryName Condition="'$(NkfNetLibraryName)' == ''">libnkf32.so</NkfNetLibraryName>
  </PropertyGroup>

  <ItemGroup>
    <NativeFiles Condition="'$(MSBuildThisFileDirectory)' != '' And
                                   HasTrailingSlash('$(MSBuildThisFileDirectory)')"
                        Include="$(MSBuildThisFileDirectory)**\$(NkfNetLibraryName)" />
  </ItemGroup>

  <!--
  ******************************************************************************
  **                          Interop Library Build Targets                   **
  ******************************************************************************
  -->

  <Target Name="CopyNativeFiles"
          Condition="'$(CopyNativeFiles)' != 'false' And
                     '$(OutDir)' != '' And
                     HasTrailingSlash('$(OutDir)') And
                     Exists('$(OutDir)')"
          Inputs="@(NativeFiles)"
          Outputs="@(NativeFiles -> '$(OutDir)%(RecursiveDir)%(Filename)%(Extension)')">
    <Copy SourceFiles="@(NativeFiles)"
          DestinationFiles="@(NativeFiles -> '$(OutDir)%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <!--
  ******************************************************************************
  -->

  <Target Name="CleanNativeFiles"
          Condition="'$(CleanNativeFiles)' != 'false' And
                     '$(OutDir)' != '' And
                     HasTrailingSlash('$(OutDir)') And
                     Exists('$(OutDir)')">
    <Delete Files="@(NativeFiles -> '$(OutDir)%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <!--
  ******************************************************************************
  **                                Library Build Properties                  **
  ******************************************************************************
  -->

  <PropertyGroup>
    <BuildDependsOn>
      $(BuildDependsOn);
      CopyNativeFiles;
    </BuildDependsOn>
    <CleanDependsOn>
      $(CleanDependsOn);
      CleanNativeFiles;
    </CleanDependsOn>
  </PropertyGroup>
</Project>